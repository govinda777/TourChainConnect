name: Smart Contracts CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'contracts/**'
      - '.github/workflows/smart-contracts.yml'
  pull_request:
    branches: [main]
    paths:
      - 'contracts/**'
      - '.github/workflows/smart-contracts.yml'
  workflow_dispatch:
    inputs:
      deploy_network:
        description: 'Network to deploy contracts to'
        required: true
        default: 'sepolia'
        type: choice
        options:
          - sepolia
          - goerli
          - polygon-mumbai
          - localhost
      use_gnosis_safe:
        description: 'Use Gnosis Safe for contract administration'
        type: boolean
        default: false
      run_security_scan:
        description: 'Run Mythril security analysis'
        type: boolean
        default: true

jobs:
  test:
    name: Test Smart Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Hardhat tests
        run: npx hardhat test

      - name: Generate code coverage
        run: npx hardhat coverage
        
      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.event.inputs.run_security_scan == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Mythril
        run: |
          sudo apt-get install -y python3-pip
          pip3 install mythril

      - name: Run Mythril analysis
        run: |
          mkdir -p security-reports
          find contracts -name "*.sol" -not -path "*/node_modules/*" | while read contract; do
            echo "Analyzing $contract..."
            myth analyze $contract --solc-json mythril.config.json -o markdown > "security-reports/$(basename $contract).md" || true
          done
        
      - name: Archive security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: security-reports/

  deploy:
    name: Deploy Smart Contracts
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.deploy_network }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set Environment Variables
        run: |
          echo "USE_GNOSIS_SAFE=${{ github.event.inputs.use_gnosis_safe }}" >> $GITHUB_ENV
          echo "HARDHAT_NETWORK=${{ github.event.inputs.deploy_network }}" >> $GITHUB_ENV
          
      - name: Setup .env file
        run: |
          echo "PRIVATE_KEY=${{ secrets.DEPLOYER_PRIVATE_KEY }}" >> .env
          echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
          echo "POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}" >> .env
          echo "SAFE_SERVICE_URL=${{ secrets.SAFE_SERVICE_URL }}" >> .env
          
      - name: Deploy Contracts
        run: npx hardhat run contracts/scripts/deploy-all.ts --network ${{ github.event.inputs.deploy_network }}
        
      - name: Verify Contracts on Explorer
        run: |
          if [[ "${{ github.event.inputs.deploy_network }}" != "localhost" ]]; then
            echo "Verifying contracts on ${{ github.event.inputs.deploy_network }} explorer..."
            cp deployed-contracts.json verification-info.json
            npx hardhat verify-all --network ${{ github.event.inputs.deploy_network }}
          else
            echo "Skipping verification for localhost network"
          fi
        
      - name: Archive deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-artifacts
          path: |
            deployed-contracts.json
            contracts/deployments/